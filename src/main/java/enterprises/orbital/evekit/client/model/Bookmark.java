/*
 * EveKit Model API Server
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package enterprises.orbital.evekit.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.io.Serializable;

/**
 * Model data common properties
 */
@ApiModel(description = "Model data common properties")

public class Bookmark implements Serializable {
  private static final long serialVersionUID = 1L;

  @JsonProperty("cid")
  private Long cid = null;

  @JsonProperty("eveKitVersion")
  private Integer eveKitVersion = null;

  @JsonProperty("lifeStart")
  private Long lifeStart = null;

  @JsonProperty("lifeEnd")
  private Long lifeEnd = null;

  @JsonProperty("folderID")
  private Integer folderID = null;

  @JsonProperty("folderName")
  private String folderName = null;

  @JsonProperty("folderCreatorID")
  private Integer folderCreatorID = null;

  @JsonProperty("bookmarkID")
  private Integer bookmarkID = null;

  @JsonProperty("bookmarkCreatorID")
  private Integer bookmarkCreatorID = null;

  @JsonProperty("created")
  private Long created = null;

  @JsonProperty("itemID")
  private Long itemID = null;

  @JsonProperty("typeID")
  private Integer typeID = null;

  @JsonProperty("locationID")
  private Integer locationID = null;

  @JsonProperty("x")
  private Double x = null;

  @JsonProperty("y")
  private Double y = null;

  @JsonProperty("z")
  private Double z = null;

  @JsonProperty("memo")
  private String memo = null;

  @JsonProperty("note")
  private String note = null;

  @JsonProperty("lifeStartDate")
  private OffsetDateTime lifeStartDate = null;

  @JsonProperty("lifeEndDate")
  private OffsetDateTime lifeEndDate = null;

  @JsonProperty("createdDate")
  private OffsetDateTime createdDate = null;

  public Bookmark cid(Long cid) {
    this.cid = cid;
    return this;
  }

   /**
   * Unique ID
   * @return cid
  **/
  @ApiModelProperty(example = "null", value = "Unique ID")
  public Long getCid() {
    return cid;
  }

  public void setCid(Long cid) {
    this.cid = cid;
  }

  public Bookmark eveKitVersion(Integer eveKitVersion) {
    this.eveKitVersion = eveKitVersion;
    return this;
  }

   /**
   * EveKit release version
   * @return eveKitVersion
  **/
  @ApiModelProperty(example = "null", value = "EveKit release version")
  public Integer getEveKitVersion() {
    return eveKitVersion;
  }

  public void setEveKitVersion(Integer eveKitVersion) {
    this.eveKitVersion = eveKitVersion;
  }

  public Bookmark lifeStart(Long lifeStart) {
    this.lifeStart = lifeStart;
    return this;
  }

   /**
   * Model lifeline start (milliseconds UTC)
   * @return lifeStart
  **/
  @ApiModelProperty(example = "null", value = "Model lifeline start (milliseconds UTC)")
  public Long getLifeStart() {
    return lifeStart;
  }

  public void setLifeStart(Long lifeStart) {
    this.lifeStart = lifeStart;
  }

  public Bookmark lifeEnd(Long lifeEnd) {
    this.lifeEnd = lifeEnd;
    return this;
  }

   /**
   * Model lifeline end (milliseconds UTC), MAX_LONG for live data
   * @return lifeEnd
  **/
  @ApiModelProperty(example = "null", value = "Model lifeline end (milliseconds UTC), MAX_LONG for live data")
  public Long getLifeEnd() {
    return lifeEnd;
  }

  public void setLifeEnd(Long lifeEnd) {
    this.lifeEnd = lifeEnd;
  }

  public Bookmark folderID(Integer folderID) {
    this.folderID = folderID;
    return this;
  }

   /**
   * Get folderID
   * @return folderID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getFolderID() {
    return folderID;
  }

  public void setFolderID(Integer folderID) {
    this.folderID = folderID;
  }

  public Bookmark folderName(String folderName) {
    this.folderName = folderName;
    return this;
  }

   /**
   * Get folderName
   * @return folderName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFolderName() {
    return folderName;
  }

  public void setFolderName(String folderName) {
    this.folderName = folderName;
  }

  public Bookmark folderCreatorID(Integer folderCreatorID) {
    this.folderCreatorID = folderCreatorID;
    return this;
  }

   /**
   * Get folderCreatorID
   * @return folderCreatorID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getFolderCreatorID() {
    return folderCreatorID;
  }

  public void setFolderCreatorID(Integer folderCreatorID) {
    this.folderCreatorID = folderCreatorID;
  }

  public Bookmark bookmarkID(Integer bookmarkID) {
    this.bookmarkID = bookmarkID;
    return this;
  }

   /**
   * Get bookmarkID
   * @return bookmarkID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getBookmarkID() {
    return bookmarkID;
  }

  public void setBookmarkID(Integer bookmarkID) {
    this.bookmarkID = bookmarkID;
  }

  public Bookmark bookmarkCreatorID(Integer bookmarkCreatorID) {
    this.bookmarkCreatorID = bookmarkCreatorID;
    return this;
  }

   /**
   * Get bookmarkCreatorID
   * @return bookmarkCreatorID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getBookmarkCreatorID() {
    return bookmarkCreatorID;
  }

  public void setBookmarkCreatorID(Integer bookmarkCreatorID) {
    this.bookmarkCreatorID = bookmarkCreatorID;
  }

  public Bookmark created(Long created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getCreated() {
    return created;
  }

  public void setCreated(Long created) {
    this.created = created;
  }

  public Bookmark itemID(Long itemID) {
    this.itemID = itemID;
    return this;
  }

   /**
   * Get itemID
   * @return itemID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getItemID() {
    return itemID;
  }

  public void setItemID(Long itemID) {
    this.itemID = itemID;
  }

  public Bookmark typeID(Integer typeID) {
    this.typeID = typeID;
    return this;
  }

   /**
   * Get typeID
   * @return typeID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTypeID() {
    return typeID;
  }

  public void setTypeID(Integer typeID) {
    this.typeID = typeID;
  }

  public Bookmark locationID(Integer locationID) {
    this.locationID = locationID;
    return this;
  }

   /**
   * Get locationID
   * @return locationID
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getLocationID() {
    return locationID;
  }

  public void setLocationID(Integer locationID) {
    this.locationID = locationID;
  }

  public Bookmark x(Double x) {
    this.x = x;
    return this;
  }

   /**
   * Get x
   * @return x
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getX() {
    return x;
  }

  public void setX(Double x) {
    this.x = x;
  }

  public Bookmark y(Double y) {
    this.y = y;
    return this;
  }

   /**
   * Get y
   * @return y
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getY() {
    return y;
  }

  public void setY(Double y) {
    this.y = y;
  }

  public Bookmark z(Double z) {
    this.z = z;
    return this;
  }

   /**
   * Get z
   * @return z
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getZ() {
    return z;
  }

  public void setZ(Double z) {
    this.z = z;
  }

  public Bookmark memo(String memo) {
    this.memo = memo;
    return this;
  }

   /**
   * Get memo
   * @return memo
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMemo() {
    return memo;
  }

  public void setMemo(String memo) {
    this.memo = memo;
  }

  public Bookmark note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Bookmark lifeStartDate(OffsetDateTime lifeStartDate) {
    this.lifeStartDate = lifeStartDate;
    return this;
  }

   /**
   * lifeStart Date
   * @return lifeStartDate
  **/
  @ApiModelProperty(example = "null", value = "lifeStart Date")
  public OffsetDateTime getLifeStartDate() {
    return lifeStartDate;
  }

  public void setLifeStartDate(OffsetDateTime lifeStartDate) {
    this.lifeStartDate = lifeStartDate;
  }

  public Bookmark lifeEndDate(OffsetDateTime lifeEndDate) {
    this.lifeEndDate = lifeEndDate;
    return this;
  }

   /**
   * lifeEnd Date
   * @return lifeEndDate
  **/
  @ApiModelProperty(example = "null", value = "lifeEnd Date")
  public OffsetDateTime getLifeEndDate() {
    return lifeEndDate;
  }

  public void setLifeEndDate(OffsetDateTime lifeEndDate) {
    this.lifeEndDate = lifeEndDate;
  }

  public Bookmark createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * created Date
   * @return createdDate
  **/
  @ApiModelProperty(example = "null", value = "created Date")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bookmark bookmark = (Bookmark) o;
    return Objects.equals(this.cid, bookmark.cid) &&
        Objects.equals(this.eveKitVersion, bookmark.eveKitVersion) &&
        Objects.equals(this.lifeStart, bookmark.lifeStart) &&
        Objects.equals(this.lifeEnd, bookmark.lifeEnd) &&
        Objects.equals(this.folderID, bookmark.folderID) &&
        Objects.equals(this.folderName, bookmark.folderName) &&
        Objects.equals(this.folderCreatorID, bookmark.folderCreatorID) &&
        Objects.equals(this.bookmarkID, bookmark.bookmarkID) &&
        Objects.equals(this.bookmarkCreatorID, bookmark.bookmarkCreatorID) &&
        Objects.equals(this.created, bookmark.created) &&
        Objects.equals(this.itemID, bookmark.itemID) &&
        Objects.equals(this.typeID, bookmark.typeID) &&
        Objects.equals(this.locationID, bookmark.locationID) &&
        Objects.equals(this.x, bookmark.x) &&
        Objects.equals(this.y, bookmark.y) &&
        Objects.equals(this.z, bookmark.z) &&
        Objects.equals(this.memo, bookmark.memo) &&
        Objects.equals(this.note, bookmark.note) &&
        Objects.equals(this.lifeStartDate, bookmark.lifeStartDate) &&
        Objects.equals(this.lifeEndDate, bookmark.lifeEndDate) &&
        Objects.equals(this.createdDate, bookmark.createdDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cid, eveKitVersion, lifeStart, lifeEnd, folderID, folderName, folderCreatorID, bookmarkID, bookmarkCreatorID, created, itemID, typeID, locationID, x, y, z, memo, note, lifeStartDate, lifeEndDate, createdDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bookmark {\n");
    
    sb.append("    cid: ").append(toIndentedString(cid)).append("\n");
    sb.append("    eveKitVersion: ").append(toIndentedString(eveKitVersion)).append("\n");
    sb.append("    lifeStart: ").append(toIndentedString(lifeStart)).append("\n");
    sb.append("    lifeEnd: ").append(toIndentedString(lifeEnd)).append("\n");
    sb.append("    folderID: ").append(toIndentedString(folderID)).append("\n");
    sb.append("    folderName: ").append(toIndentedString(folderName)).append("\n");
    sb.append("    folderCreatorID: ").append(toIndentedString(folderCreatorID)).append("\n");
    sb.append("    bookmarkID: ").append(toIndentedString(bookmarkID)).append("\n");
    sb.append("    bookmarkCreatorID: ").append(toIndentedString(bookmarkCreatorID)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    itemID: ").append(toIndentedString(itemID)).append("\n");
    sb.append("    typeID: ").append(toIndentedString(typeID)).append("\n");
    sb.append("    locationID: ").append(toIndentedString(locationID)).append("\n");
    sb.append("    x: ").append(toIndentedString(x)).append("\n");
    sb.append("    y: ").append(toIndentedString(y)).append("\n");
    sb.append("    z: ").append(toIndentedString(z)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    lifeStartDate: ").append(toIndentedString(lifeStartDate)).append("\n");
    sb.append("    lifeEndDate: ").append(toIndentedString(lifeEndDate)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

