/*
 * EveKit Model API Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package enterprises.orbital.evekit.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CharacterSheetAttributes
 */
public class CharacterSheetAttributesTest {
    private final CharacterSheetAttributes model = new CharacterSheetAttributes();

    /**
     * Model tests for CharacterSheetAttributes
     */
    @Test
    public void testCharacterSheetAttributes() {
        // TODO: test CharacterSheetAttributes
    }

    /**
     * Test the property 'cid'
     */
    @Test
    public void cidTest() {
        // TODO: test cid
    }

    /**
     * Test the property 'eveKitVersion'
     */
    @Test
    public void eveKitVersionTest() {
        // TODO: test eveKitVersion
    }

    /**
     * Test the property 'lifeStart'
     */
    @Test
    public void lifeStartTest() {
        // TODO: test lifeStart
    }

    /**
     * Test the property 'lifeEnd'
     */
    @Test
    public void lifeEndTest() {
        // TODO: test lifeEnd
    }

    /**
     * Test the property 'intelligence'
     */
    @Test
    public void intelligenceTest() {
        // TODO: test intelligence
    }

    /**
     * Test the property 'memory'
     */
    @Test
    public void memoryTest() {
        // TODO: test memory
    }

    /**
     * Test the property 'charisma'
     */
    @Test
    public void charismaTest() {
        // TODO: test charisma
    }

    /**
     * Test the property 'perception'
     */
    @Test
    public void perceptionTest() {
        // TODO: test perception
    }

    /**
     * Test the property 'willpower'
     */
    @Test
    public void willpowerTest() {
        // TODO: test willpower
    }

    /**
     * Test the property 'bonusRemaps'
     */
    @Test
    public void bonusRemapsTest() {
        // TODO: test bonusRemaps
    }

    /**
     * Test the property 'lastRemapDate'
     */
    @Test
    public void lastRemapDateTest() {
        // TODO: test lastRemapDate
    }

    /**
     * Test the property 'accruedRemapCooldownDate'
     */
    @Test
    public void accruedRemapCooldownDateTest() {
        // TODO: test accruedRemapCooldownDate
    }

    /**
     * Test the property 'lifeStartDate'
     */
    @Test
    public void lifeStartDateTest() {
        // TODO: test lifeStartDate
    }

    /**
     * Test the property 'lifeEndDate'
     */
    @Test
    public void lifeEndDateTest() {
        // TODO: test lifeEndDate
    }

    /**
     * Test the property 'lastRemapDateDate'
     */
    @Test
    public void lastRemapDateDateTest() {
        // TODO: test lastRemapDateDate
    }

    /**
     * Test the property 'accruedRemapCooldownDateDate'
     */
    @Test
    public void accruedRemapCooldownDateDateTest() {
        // TODO: test accruedRemapCooldownDateDate
    }

}
