/*
 * EveKit Model API Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package enterprises.orbital.evekit.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for FacWarStats
 */
public class FacWarStatsTest {
    private final FacWarStats model = new FacWarStats();

    /**
     * Model tests for FacWarStats
     */
    @Test
    public void testFacWarStats() {
        // TODO: test FacWarStats
    }

    /**
     * Test the property 'cid'
     */
    @Test
    public void cidTest() {
        // TODO: test cid
    }

    /**
     * Test the property 'eveKitVersion'
     */
    @Test
    public void eveKitVersionTest() {
        // TODO: test eveKitVersion
    }

    /**
     * Test the property 'lifeStart'
     */
    @Test
    public void lifeStartTest() {
        // TODO: test lifeStart
    }

    /**
     * Test the property 'lifeEnd'
     */
    @Test
    public void lifeEndTest() {
        // TODO: test lifeEnd
    }

    /**
     * Test the property 'currentRank'
     */
    @Test
    public void currentRankTest() {
        // TODO: test currentRank
    }

    /**
     * Test the property 'enlisted'
     */
    @Test
    public void enlistedTest() {
        // TODO: test enlisted
    }

    /**
     * Test the property 'factionID'
     */
    @Test
    public void factionIDTest() {
        // TODO: test factionID
    }

    /**
     * Test the property 'highestRank'
     */
    @Test
    public void highestRankTest() {
        // TODO: test highestRank
    }

    /**
     * Test the property 'killsLastWeek'
     */
    @Test
    public void killsLastWeekTest() {
        // TODO: test killsLastWeek
    }

    /**
     * Test the property 'killsTotal'
     */
    @Test
    public void killsTotalTest() {
        // TODO: test killsTotal
    }

    /**
     * Test the property 'killsYesterday'
     */
    @Test
    public void killsYesterdayTest() {
        // TODO: test killsYesterday
    }

    /**
     * Test the property 'pilots'
     */
    @Test
    public void pilotsTest() {
        // TODO: test pilots
    }

    /**
     * Test the property 'victoryPointsLastWeek'
     */
    @Test
    public void victoryPointsLastWeekTest() {
        // TODO: test victoryPointsLastWeek
    }

    /**
     * Test the property 'victoryPointsTotal'
     */
    @Test
    public void victoryPointsTotalTest() {
        // TODO: test victoryPointsTotal
    }

    /**
     * Test the property 'victoryPointsYesterday'
     */
    @Test
    public void victoryPointsYesterdayTest() {
        // TODO: test victoryPointsYesterday
    }

    /**
     * Test the property 'lifeStartDate'
     */
    @Test
    public void lifeStartDateTest() {
        // TODO: test lifeStartDate
    }

    /**
     * Test the property 'lifeEndDate'
     */
    @Test
    public void lifeEndDateTest() {
        // TODO: test lifeEndDate
    }

    /**
     * Test the property 'enlistedDate'
     */
    @Test
    public void enlistedDateTest() {
        // TODO: test enlistedDate
    }

}
