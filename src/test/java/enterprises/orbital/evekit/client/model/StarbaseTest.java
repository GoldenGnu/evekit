/*
 * EveKit Model API Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package enterprises.orbital.evekit.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Starbase
 */
public class StarbaseTest {
    private final Starbase model = new Starbase();

    /**
     * Model tests for Starbase
     */
    @Test
    public void testStarbase() {
        // TODO: test Starbase
    }

    /**
     * Test the property 'cid'
     */
    @Test
    public void cidTest() {
        // TODO: test cid
    }

    /**
     * Test the property 'eveKitVersion'
     */
    @Test
    public void eveKitVersionTest() {
        // TODO: test eveKitVersion
    }

    /**
     * Test the property 'lifeStart'
     */
    @Test
    public void lifeStartTest() {
        // TODO: test lifeStart
    }

    /**
     * Test the property 'lifeEnd'
     */
    @Test
    public void lifeEndTest() {
        // TODO: test lifeEnd
    }

    /**
     * Test the property 'starbaseID'
     */
    @Test
    public void starbaseIDTest() {
        // TODO: test starbaseID
    }

    /**
     * Test the property 'typeID'
     */
    @Test
    public void typeIDTest() {
        // TODO: test typeID
    }

    /**
     * Test the property 'systemID'
     */
    @Test
    public void systemIDTest() {
        // TODO: test systemID
    }

    /**
     * Test the property 'moonID'
     */
    @Test
    public void moonIDTest() {
        // TODO: test moonID
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'unanchorAt'
     */
    @Test
    public void unanchorAtTest() {
        // TODO: test unanchorAt
    }

    /**
     * Test the property 'reinforcedUntil'
     */
    @Test
    public void reinforcedUntilTest() {
        // TODO: test reinforcedUntil
    }

    /**
     * Test the property 'onlinedSince'
     */
    @Test
    public void onlinedSinceTest() {
        // TODO: test onlinedSince
    }

    /**
     * Test the property 'fuelBayView'
     */
    @Test
    public void fuelBayViewTest() {
        // TODO: test fuelBayView
    }

    /**
     * Test the property 'fuelBayTake'
     */
    @Test
    public void fuelBayTakeTest() {
        // TODO: test fuelBayTake
    }

    /**
     * Test the property 'anchor'
     */
    @Test
    public void anchorTest() {
        // TODO: test anchor
    }

    /**
     * Test the property 'unanchor'
     */
    @Test
    public void unanchorTest() {
        // TODO: test unanchor
    }

    /**
     * Test the property 'online'
     */
    @Test
    public void onlineTest() {
        // TODO: test online
    }

    /**
     * Test the property 'offline'
     */
    @Test
    public void offlineTest() {
        // TODO: test offline
    }

    /**
     * Test the property 'allowCorporationMembers'
     */
    @Test
    public void allowCorporationMembersTest() {
        // TODO: test allowCorporationMembers
    }

    /**
     * Test the property 'allowAllianceMembers'
     */
    @Test
    public void allowAllianceMembersTest() {
        // TODO: test allowAllianceMembers
    }

    /**
     * Test the property 'useAllianceStandings'
     */
    @Test
    public void useAllianceStandingsTest() {
        // TODO: test useAllianceStandings
    }

    /**
     * Test the property 'attackStandingThreshold'
     */
    @Test
    public void attackStandingThresholdTest() {
        // TODO: test attackStandingThreshold
    }

    /**
     * Test the property 'attackSecurityStatusThreshold'
     */
    @Test
    public void attackSecurityStatusThresholdTest() {
        // TODO: test attackSecurityStatusThreshold
    }

    /**
     * Test the property 'attackIfOtherSecurityStatusDropping'
     */
    @Test
    public void attackIfOtherSecurityStatusDroppingTest() {
        // TODO: test attackIfOtherSecurityStatusDropping
    }

    /**
     * Test the property 'attackIfAtWar'
     */
    @Test
    public void attackIfAtWarTest() {
        // TODO: test attackIfAtWar
    }

    /**
     * Test the property 'lifeStartDate'
     */
    @Test
    public void lifeStartDateTest() {
        // TODO: test lifeStartDate
    }

    /**
     * Test the property 'lifeEndDate'
     */
    @Test
    public void lifeEndDateTest() {
        // TODO: test lifeEndDate
    }

    /**
     * Test the property 'unanchorAtDate'
     */
    @Test
    public void unanchorAtDateTest() {
        // TODO: test unanchorAtDate
    }

    /**
     * Test the property 'reinforcedUntilDate'
     */
    @Test
    public void reinforcedUntilDateTest() {
        // TODO: test reinforcedUntilDate
    }

    /**
     * Test the property 'onlinedSinceDate'
     */
    @Test
    public void onlinedSinceDateTest() {
        // TODO: test onlinedSinceDate
    }

}
