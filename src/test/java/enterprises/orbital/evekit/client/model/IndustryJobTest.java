/*
 * EveKit Model API Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package enterprises.orbital.evekit.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IndustryJob
 */
public class IndustryJobTest {
    private final IndustryJob model = new IndustryJob();

    /**
     * Model tests for IndustryJob
     */
    @Test
    public void testIndustryJob() {
        // TODO: test IndustryJob
    }

    /**
     * Test the property 'cid'
     */
    @Test
    public void cidTest() {
        // TODO: test cid
    }

    /**
     * Test the property 'eveKitVersion'
     */
    @Test
    public void eveKitVersionTest() {
        // TODO: test eveKitVersion
    }

    /**
     * Test the property 'lifeStart'
     */
    @Test
    public void lifeStartTest() {
        // TODO: test lifeStart
    }

    /**
     * Test the property 'lifeEnd'
     */
    @Test
    public void lifeEndTest() {
        // TODO: test lifeEnd
    }

    /**
     * Test the property 'jobID'
     */
    @Test
    public void jobIDTest() {
        // TODO: test jobID
    }

    /**
     * Test the property 'installerID'
     */
    @Test
    public void installerIDTest() {
        // TODO: test installerID
    }

    /**
     * Test the property 'facilityID'
     */
    @Test
    public void facilityIDTest() {
        // TODO: test facilityID
    }

    /**
     * Test the property 'stationID'
     */
    @Test
    public void stationIDTest() {
        // TODO: test stationID
    }

    /**
     * Test the property 'activityID'
     */
    @Test
    public void activityIDTest() {
        // TODO: test activityID
    }

    /**
     * Test the property 'blueprintID'
     */
    @Test
    public void blueprintIDTest() {
        // TODO: test blueprintID
    }

    /**
     * Test the property 'blueprintTypeID'
     */
    @Test
    public void blueprintTypeIDTest() {
        // TODO: test blueprintTypeID
    }

    /**
     * Test the property 'blueprintLocationID'
     */
    @Test
    public void blueprintLocationIDTest() {
        // TODO: test blueprintLocationID
    }

    /**
     * Test the property 'outputLocationID'
     */
    @Test
    public void outputLocationIDTest() {
        // TODO: test outputLocationID
    }

    /**
     * Test the property 'runs'
     */
    @Test
    public void runsTest() {
        // TODO: test runs
    }

    /**
     * Test the property 'cost'
     */
    @Test
    public void costTest() {
        // TODO: test cost
    }

    /**
     * Test the property 'licensedRuns'
     */
    @Test
    public void licensedRunsTest() {
        // TODO: test licensedRuns
    }

    /**
     * Test the property 'probability'
     */
    @Test
    public void probabilityTest() {
        // TODO: test probability
    }

    /**
     * Test the property 'productTypeID'
     */
    @Test
    public void productTypeIDTest() {
        // TODO: test productTypeID
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'timeInSeconds'
     */
    @Test
    public void timeInSecondsTest() {
        // TODO: test timeInSeconds
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'endDate'
     */
    @Test
    public void endDateTest() {
        // TODO: test endDate
    }

    /**
     * Test the property 'pauseDate'
     */
    @Test
    public void pauseDateTest() {
        // TODO: test pauseDate
    }

    /**
     * Test the property 'completedDate'
     */
    @Test
    public void completedDateTest() {
        // TODO: test completedDate
    }

    /**
     * Test the property 'completedCharacterID'
     */
    @Test
    public void completedCharacterIDTest() {
        // TODO: test completedCharacterID
    }

    /**
     * Test the property 'successfulRuns'
     */
    @Test
    public void successfulRunsTest() {
        // TODO: test successfulRuns
    }

    /**
     * Test the property 'lifeStartDate'
     */
    @Test
    public void lifeStartDateTest() {
        // TODO: test lifeStartDate
    }

    /**
     * Test the property 'lifeEndDate'
     */
    @Test
    public void lifeEndDateTest() {
        // TODO: test lifeEndDate
    }

    /**
     * Test the property 'startDateDate'
     */
    @Test
    public void startDateDateTest() {
        // TODO: test startDateDate
    }

    /**
     * Test the property 'endDateDate'
     */
    @Test
    public void endDateDateTest() {
        // TODO: test endDateDate
    }

    /**
     * Test the property 'pauseDateDate'
     */
    @Test
    public void pauseDateDateTest() {
        // TODO: test pauseDateDate
    }

    /**
     * Test the property 'completedDateDate'
     */
    @Test
    public void completedDateDateTest() {
        // TODO: test completedDateDate
    }

}
