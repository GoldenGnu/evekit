/*
 * EveKit Model API Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package enterprises.orbital.evekit.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CustomsOffice
 */
public class CustomsOfficeTest {
    private final CustomsOffice model = new CustomsOffice();

    /**
     * Model tests for CustomsOffice
     */
    @Test
    public void testCustomsOffice() {
        // TODO: test CustomsOffice
    }

    /**
     * Test the property 'cid'
     */
    @Test
    public void cidTest() {
        // TODO: test cid
    }

    /**
     * Test the property 'eveKitVersion'
     */
    @Test
    public void eveKitVersionTest() {
        // TODO: test eveKitVersion
    }

    /**
     * Test the property 'lifeStart'
     */
    @Test
    public void lifeStartTest() {
        // TODO: test lifeStart
    }

    /**
     * Test the property 'lifeEnd'
     */
    @Test
    public void lifeEndTest() {
        // TODO: test lifeEnd
    }

    /**
     * Test the property 'officeID'
     */
    @Test
    public void officeIDTest() {
        // TODO: test officeID
    }

    /**
     * Test the property 'solarSystemID'
     */
    @Test
    public void solarSystemIDTest() {
        // TODO: test solarSystemID
    }

    /**
     * Test the property 'reinforceExitStart'
     */
    @Test
    public void reinforceExitStartTest() {
        // TODO: test reinforceExitStart
    }

    /**
     * Test the property 'reinforceExitEnd'
     */
    @Test
    public void reinforceExitEndTest() {
        // TODO: test reinforceExitEnd
    }

    /**
     * Test the property 'allowAlliance'
     */
    @Test
    public void allowAllianceTest() {
        // TODO: test allowAlliance
    }

    /**
     * Test the property 'allowStandings'
     */
    @Test
    public void allowStandingsTest() {
        // TODO: test allowStandings
    }

    /**
     * Test the property 'standingLevel'
     */
    @Test
    public void standingLevelTest() {
        // TODO: test standingLevel
    }

    /**
     * Test the property 'taxRateAlliance'
     */
    @Test
    public void taxRateAllianceTest() {
        // TODO: test taxRateAlliance
    }

    /**
     * Test the property 'taxRateCorp'
     */
    @Test
    public void taxRateCorpTest() {
        // TODO: test taxRateCorp
    }

    /**
     * Test the property 'taxRateStandingExcellent'
     */
    @Test
    public void taxRateStandingExcellentTest() {
        // TODO: test taxRateStandingExcellent
    }

    /**
     * Test the property 'taxRateStandingGood'
     */
    @Test
    public void taxRateStandingGoodTest() {
        // TODO: test taxRateStandingGood
    }

    /**
     * Test the property 'taxRateStandingNeutral'
     */
    @Test
    public void taxRateStandingNeutralTest() {
        // TODO: test taxRateStandingNeutral
    }

    /**
     * Test the property 'taxRateStandingBad'
     */
    @Test
    public void taxRateStandingBadTest() {
        // TODO: test taxRateStandingBad
    }

    /**
     * Test the property 'taxRateStandingTerrible'
     */
    @Test
    public void taxRateStandingTerribleTest() {
        // TODO: test taxRateStandingTerrible
    }

    /**
     * Test the property 'lifeStartDate'
     */
    @Test
    public void lifeStartDateTest() {
        // TODO: test lifeStartDate
    }

    /**
     * Test the property 'lifeEndDate'
     */
    @Test
    public void lifeEndDateTest() {
        // TODO: test lifeEndDate
    }

}
